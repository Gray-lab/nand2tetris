function Main.main 3
push constant 10 
call Array.new 1
pop local 0 //bind topmost stack value to a
push constant 5 
call Array.new 1
pop local 1 //bind topmost stack value to b
push constant 1 
call Array.new 1
pop local 2 //bind topmost stack value to c
push local 0 //a
push constant 3 
add
push constant 2 
pop temp 0 //save expression result to temp location
pop pointer 1 //set pointer to array+exp
push temp 0 //get stored value
pop that 0 //set array location to that value
push local 0 //a
push constant 4 
add
push constant 8 
pop temp 0 //save expression result to temp location
pop pointer 1 //set pointer to array+exp
push temp 0 //get stored value
pop that 0 //set array location to that value
push local 0 //a
push constant 5 
add
push constant 4 
pop temp 0 //save expression result to temp location
pop pointer 1 //set pointer to array+exp
push temp 0 //get stored value
pop that 0 //set array location to that value
push local 1 //b
push local 0 //pointer to a
push constant 3 
add
pop pointer 1 
push that 0 //value of a[exp]
add
push local 0 //pointer to a
push constant 3 
add
pop pointer 1 
push that 0 //value of a[exp]
push constant 3 
add
pop temp 0 //save expression result to temp location
pop pointer 1 //set pointer to array+exp
push temp 0 //get stored value
pop that 0 //set array location to that value
push local 0 //a
push local 1 //pointer to b
push local 0 //pointer to a
push constant 3 
add
pop pointer 1 
push that 0 //value of a[exp]
add
pop pointer 1 
push that 0 //value of b[exp]
add
push local 0 //pointer to a
push local 0 //pointer to a
push constant 5 
add
pop pointer 1 
push that 0 //value of a[exp]
add
pop pointer 1 
push that 0 //value of a[exp]
push local 1 //pointer to b
push constant 7 
push local 0 //pointer to a
push constant 3 
add
pop pointer 1 
push that 0 //value of a[exp]
sub
push constant 2 
call Main.double 1
sub
push constant 1 
add
add
pop pointer 1 
push that 0 //value of b[exp]
call Math.multiply 2
pop temp 0 //save expression result to temp location
pop pointer 1 //set pointer to array+exp
push temp 0 //get stored value
pop that 0 //set array location to that value
push local 2 //c
push constant 0 
add
push constant 0 //'null' or 'false'
pop temp 0 //save expression result to temp location
pop pointer 1 //set pointer to array+exp
push temp 0 //get stored value
pop that 0 //set array location to that value
push local 2 //pointer to c
push constant 0 
add
pop pointer 1 
push that 0 //value of c[exp]
pop local 2 //bind topmost stack value to c
push constant 43 
call String.new 1
push constant 84 
call String.appendChar 2
push constant 101 
call String.appendChar 2
push constant 115 
call String.appendChar 2
push constant 116 
call String.appendChar 2
push constant 32 
call String.appendChar 2
push constant 49 
call String.appendChar 2
push constant 58 
call String.appendChar 2
push constant 32 
call String.appendChar 2
push constant 101 
call String.appendChar 2
push constant 120 
call String.appendChar 2
push constant 112 
call String.appendChar 2
push constant 101 
call String.appendChar 2
push constant 99 
call String.appendChar 2
push constant 116 
call String.appendChar 2
push constant 101 
call String.appendChar 2
push constant 100 
call String.appendChar 2
push constant 32 
call String.appendChar 2
push constant 114 
call String.appendChar 2
push constant 101 
call String.appendChar 2
push constant 115 
call String.appendChar 2
push constant 117 
call String.appendChar 2
push constant 108 
call String.appendChar 2
push constant 116 
call String.appendChar 2
push constant 58 
call String.appendChar 2
push constant 32 
call String.appendChar 2
push constant 53 
call String.appendChar 2
push constant 59 
call String.appendChar 2
push constant 32 
call String.appendChar 2
push constant 97 
call String.appendChar 2
push constant 99 
call String.appendChar 2
push constant 116 
call String.appendChar 2
push constant 117 
call String.appendChar 2
push constant 97 
call String.appendChar 2
push constant 108 
call String.appendChar 2
push constant 32 
call String.appendChar 2
push constant 114 
call String.appendChar 2
push constant 101 
call String.appendChar 2
push constant 115 
call String.appendChar 2
push constant 117 
call String.appendChar 2
push constant 108 
call String.appendChar 2
push constant 116 
call String.appendChar 2
push constant 58 
call String.appendChar 2
push constant 32 
call String.appendChar 2
call Output.printString 1
pop temp 0 //remove return value from stack after do statement
push local 1 //pointer to b
push constant 2 
add
pop pointer 1 
push that 0 //value of b[exp]
call Output.printInt 1
pop temp 0 //remove return value from stack after do statement
call Output.println 0
pop temp 0 //remove return value from stack after do statement
push constant 44 
call String.new 1
push constant 84 
call String.appendChar 2
push constant 101 
call String.appendChar 2
push constant 115 
call String.appendChar 2
push constant 116 
call String.appendChar 2
push constant 32 
call String.appendChar 2
push constant 50 
call String.appendChar 2
push constant 58 
call String.appendChar 2
push constant 32 
call String.appendChar 2
push constant 101 
call String.appendChar 2
push constant 120 
call String.appendChar 2
push constant 112 
call String.appendChar 2
push constant 101 
call String.appendChar 2
push constant 99 
call String.appendChar 2
push constant 116 
call String.appendChar 2
push constant 101 
call String.appendChar 2
push constant 100 
call String.appendChar 2
push constant 32 
call String.appendChar 2
push constant 114 
call String.appendChar 2
push constant 101 
call String.appendChar 2
push constant 115 
call String.appendChar 2
push constant 117 
call String.appendChar 2
push constant 108 
call String.appendChar 2
push constant 116 
call String.appendChar 2
push constant 58 
call String.appendChar 2
push constant 32 
call String.appendChar 2
push constant 52 
call String.appendChar 2
push constant 48 
call String.appendChar 2
push constant 59 
call String.appendChar 2
push constant 32 
call String.appendChar 2
push constant 97 
call String.appendChar 2
push constant 99 
call String.appendChar 2
push constant 116 
call String.appendChar 2
push constant 117 
call String.appendChar 2
push constant 97 
call String.appendChar 2
push constant 108 
call String.appendChar 2
push constant 32 
call String.appendChar 2
push constant 114 
call String.appendChar 2
push constant 101 
call String.appendChar 2
push constant 115 
call String.appendChar 2
push constant 117 
call String.appendChar 2
push constant 108 
call String.appendChar 2
push constant 116 
call String.appendChar 2
push constant 58 
call String.appendChar 2
push constant 32 
call String.appendChar 2
call Output.printString 1
pop temp 0 //remove return value from stack after do statement
push local 0 //pointer to a
push constant 5 
add
pop pointer 1 
push that 0 //value of a[exp]
call Output.printInt 1
pop temp 0 //remove return value from stack after do statement
call Output.println 0
pop temp 0 //remove return value from stack after do statement
push constant 43 
call String.new 1
push constant 84 
call String.appendChar 2
push constant 101 
call String.appendChar 2
push constant 115 
call String.appendChar 2
push constant 116 
call String.appendChar 2
push constant 32 
call String.appendChar 2
push constant 51 
call String.appendChar 2
push constant 58 
call String.appendChar 2
push constant 32 
call String.appendChar 2
push constant 101 
call String.appendChar 2
push constant 120 
call String.appendChar 2
push constant 112 
call String.appendChar 2
push constant 101 
call String.appendChar 2
push constant 99 
call String.appendChar 2
push constant 116 
call String.appendChar 2
push constant 101 
call String.appendChar 2
push constant 100 
call String.appendChar 2
push constant 32 
call String.appendChar 2
push constant 114 
call String.appendChar 2
push constant 101 
call String.appendChar 2
push constant 115 
call String.appendChar 2
push constant 117 
call String.appendChar 2
push constant 108 
call String.appendChar 2
push constant 116 
call String.appendChar 2
push constant 58 
call String.appendChar 2
push constant 32 
call String.appendChar 2
push constant 48 
call String.appendChar 2
push constant 59 
call String.appendChar 2
push constant 32 
call String.appendChar 2
push constant 97 
call String.appendChar 2
push constant 99 
call String.appendChar 2
push constant 116 
call String.appendChar 2
push constant 117 
call String.appendChar 2
push constant 97 
call String.appendChar 2
push constant 108 
call String.appendChar 2
push constant 32 
call String.appendChar 2
push constant 114 
call String.appendChar 2
push constant 101 
call String.appendChar 2
push constant 115 
call String.appendChar 2
push constant 117 
call String.appendChar 2
push constant 108 
call String.appendChar 2
push constant 116 
call String.appendChar 2
push constant 58 
call String.appendChar 2
push constant 32 
call String.appendChar 2
call Output.printString 1
pop temp 0 //remove return value from stack after do statement
push local 2 //value of c
call Output.printInt 1
pop temp 0 //remove return value from stack after do statement
call Output.println 0
pop temp 0 //remove return value from stack after do statement
push constant 0 //'null' or 'false'
pop local 2 //bind topmost stack value to c
push local 2 //value of c
push constant 0 //'null' or 'false'
eq
not
if-goto IF0
push local 0 //value of a
push constant 10 
call Main.fill 2
pop temp 0 //remove return value from stack after do statement
push local 0 //pointer to a
push constant 3 
add
pop pointer 1 
push that 0 //value of a[exp]
pop local 2 //bind topmost stack value to c
push local 2 //c
push constant 1 
add
push constant 33 
pop temp 0 //save expression result to temp location
pop pointer 1 //set pointer to array+exp
push temp 0 //get stored value
pop that 0 //set array location to that value
push local 0 //pointer to a
push constant 7 
add
pop pointer 1 
push that 0 //value of a[exp]
pop local 2 //bind topmost stack value to c
push local 2 //c
push constant 1 
add
push constant 77 
pop temp 0 //save expression result to temp location
pop pointer 1 //set pointer to array+exp
push temp 0 //get stored value
pop that 0 //set array location to that value
push local 0 //pointer to a
push constant 3 
add
pop pointer 1 
push that 0 //value of a[exp]
pop local 1 //bind topmost stack value to b
push local 1 //b
push constant 1 
add
push local 1 //pointer to b
push constant 1 
add
pop pointer 1 
push that 0 //value of b[exp]
push local 2 //pointer to c
push constant 1 
add
pop pointer 1 
push that 0 //value of c[exp]
add
pop temp 0 //save expression result to temp location
pop pointer 1 //set pointer to array+exp
push temp 0 //get stored value
pop that 0 //set array location to that value
goto IF1
label IF0
label IF1
push constant 44 
call String.new 1
push constant 84 
call String.appendChar 2
push constant 101 
call String.appendChar 2
push constant 115 
call String.appendChar 2
push constant 116 
call String.appendChar 2
push constant 32 
call String.appendChar 2
push constant 52 
call String.appendChar 2
push constant 58 
call String.appendChar 2
push constant 32 
call String.appendChar 2
push constant 101 
call String.appendChar 2
push constant 120 
call String.appendChar 2
push constant 112 
call String.appendChar 2
push constant 101 
call String.appendChar 2
push constant 99 
call String.appendChar 2
push constant 116 
call String.appendChar 2
push constant 101 
call String.appendChar 2
push constant 100 
call String.appendChar 2
push constant 32 
call String.appendChar 2
push constant 114 
call String.appendChar 2
push constant 101 
call String.appendChar 2
push constant 115 
call String.appendChar 2
push constant 117 
call String.appendChar 2
push constant 108 
call String.appendChar 2
push constant 116 
call String.appendChar 2
push constant 58 
call String.appendChar 2
push constant 32 
call String.appendChar 2
push constant 55 
call String.appendChar 2
push constant 55 
call String.appendChar 2
push constant 59 
call String.appendChar 2
push constant 32 
call String.appendChar 2
push constant 97 
call String.appendChar 2
push constant 99 
call String.appendChar 2
push constant 116 
call String.appendChar 2
push constant 117 
call String.appendChar 2
push constant 97 
call String.appendChar 2
push constant 108 
call String.appendChar 2
push constant 32 
call String.appendChar 2
push constant 114 
call String.appendChar 2
push constant 101 
call String.appendChar 2
push constant 115 
call String.appendChar 2
push constant 117 
call String.appendChar 2
push constant 108 
call String.appendChar 2
push constant 116 
call String.appendChar 2
push constant 58 
call String.appendChar 2
push constant 32 
call String.appendChar 2
call Output.printString 1
pop temp 0 //remove return value from stack after do statement
push local 2 //pointer to c
push constant 1 
add
pop pointer 1 
push that 0 //value of c[exp]
call Output.printInt 1
pop temp 0 //remove return value from stack after do statement
call Output.println 0
pop temp 0 //remove return value from stack after do statement
push constant 45 
call String.new 1
push constant 84 
call String.appendChar 2
push constant 101 
call String.appendChar 2
push constant 115 
call String.appendChar 2
push constant 116 
call String.appendChar 2
push constant 32 
call String.appendChar 2
push constant 53 
call String.appendChar 2
push constant 58 
call String.appendChar 2
push constant 32 
call String.appendChar 2
push constant 101 
call String.appendChar 2
push constant 120 
call String.appendChar 2
push constant 112 
call String.appendChar 2
push constant 101 
call String.appendChar 2
push constant 99 
call String.appendChar 2
push constant 116 
call String.appendChar 2
push constant 101 
call String.appendChar 2
push constant 100 
call String.appendChar 2
push constant 32 
call String.appendChar 2
push constant 114 
call String.appendChar 2
push constant 101 
call String.appendChar 2
push constant 115 
call String.appendChar 2
push constant 117 
call String.appendChar 2
push constant 108 
call String.appendChar 2
push constant 116 
call String.appendChar 2
push constant 58 
call String.appendChar 2
push constant 32 
call String.appendChar 2
push constant 49 
call String.appendChar 2
push constant 49 
call String.appendChar 2
push constant 48 
call String.appendChar 2
push constant 59 
call String.appendChar 2
push constant 32 
call String.appendChar 2
push constant 97 
call String.appendChar 2
push constant 99 
call String.appendChar 2
push constant 116 
call String.appendChar 2
push constant 117 
call String.appendChar 2
push constant 97 
call String.appendChar 2
push constant 108 
call String.appendChar 2
push constant 32 
call String.appendChar 2
push constant 114 
call String.appendChar 2
push constant 101 
call String.appendChar 2
push constant 115 
call String.appendChar 2
push constant 117 
call String.appendChar 2
push constant 108 
call String.appendChar 2
push constant 116 
call String.appendChar 2
push constant 58 
call String.appendChar 2
push constant 32 
call String.appendChar 2
call Output.printString 1
pop temp 0 //remove return value from stack after do statement
push local 1 //pointer to b
push constant 1 
add
pop pointer 1 
push that 0 //value of b[exp]
call Output.printInt 1
pop temp 0 //remove return value from stack after do statement
call Output.println 0
pop temp 0 //remove return value from stack after do statement
return
push constant 0 
function Main.double 0
push argument 0 //value of a
push constant 2 
call Math.multiply 2
return
function Main.fill 0
label WHILE0
push argument 1 //value of size
push constant 0 
gt
not
if-goto WHILE1
push argument 1 //value of size
push constant 1 
sub
pop argument 1 //bind topmost stack value to size
push argument 0 //a
push argument 1 //value of size
add
push constant 3 
call Array.new 1
pop temp 0 //save expression result to temp location
pop pointer 1 //set pointer to array+exp
push temp 0 //get stored value
pop that 0 //set array location to that value
goto WHILE0
label WHILE1
return
push constant 0 
