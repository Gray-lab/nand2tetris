function PongGame.new 0
push constant 7 //pass num_fields to Memory.alloc for allocation in heap
call Memory.alloc 1
pop pointer 0 //Set 'this' to object base address
call Screen.clearScreen 0
pop temp 0 //remove return value from stack after do statement
push constant 50 
pop this 6 //bind topmost stack value to batWidth
push constant 230 
push constant 229 
push this 6 //value of batWidth
push constant 7 
call Bat.new 4
pop this 0 //bind topmost stack value to bat
push constant 253 
push constant 222 
push constant 0 
push constant 511 
push constant 0 
push constant 229 
call Ball.new 6
pop this 1 //bind topmost stack value to ball
push this 1 //pointer to ball for method call
push constant 400 
push constant 0 
call Ball.setDestination 3
pop temp 0 //remove return value from stack after do statement
push constant 0 
push constant 238 
push constant 511 
push constant 240 
call Screen.drawRectangle 4
pop temp 0 //remove return value from stack after do statement
push constant 22 
push constant 0 
call Output.moveCursor 2
pop temp 0 //remove return value from stack after do statement
push constant 8 
call String.new 1
push constant 83 
call String.appendChar 2
push constant 99 
call String.appendChar 2
push constant 111 
call String.appendChar 2
push constant 114 
call String.appendChar 2
push constant 101 
call String.appendChar 2
push constant 58 
call String.appendChar 2
push constant 32 
call String.appendChar 2
push constant 48 
call String.appendChar 2
call Output.printString 1
pop temp 0 //remove return value from stack after do statement
push constant 0 //'null' or 'false'
pop this 3 //bind topmost stack value to exit
push constant 0 
pop this 4 //bind topmost stack value to score
push constant 0 
pop this 2 //bind topmost stack value to wall
push constant 0 
pop this 5 //bind topmost stack value to lastWall
push pointer 0 //'this'
return
function PongGame.dispose 0
push argument 0 //arg 0 holds the pointer to the object
pop pointer 0 
push this 0 //pointer to bat for method call
call Bat.dispose 1
pop temp 0 //remove return value from stack after do statement
push this 1 //pointer to ball for method call
call Ball.dispose 1
pop temp 0 //remove return value from stack after do statement
push pointer 0 //'this'
call Memory.deAlloc 1
pop temp 0 //remove return value from stack after do statement
push constant 0 
return
function PongGame.newInstance 0
call PongGame.new 0
pop static 0 //bind topmost stack value to instance
push constant 0 
return
function PongGame.getInstance 0
push static 0 //value of instance
return
function PongGame.run 1
push argument 0 //arg 0 holds the pointer to the object
pop pointer 0 
label WHILE0
push this 3 //value of exit
not
not
if-goto WHILE1
label WHILE2
push local 0 //value of key
push constant 0 
eq
push this 3 //value of exit
not
and
not
if-goto WHILE3
call Keyboard.keyPressed 0
pop local 0 //bind topmost stack value to key
push this 0 //pointer to bat for method call
call Bat.move 1
pop temp 0 //remove return value from stack after do statement
push pointer 0 //Push current object to stack for method call
call PongGame.moveBall 1
pop temp 0 //remove return value from stack after do statement
push constant 50 
call Sys.wait 1
pop temp 0 //remove return value from stack after do statement
goto WHILE2
label WHILE3
push local 0 //value of key
push constant 130 
eq
not
if-goto IF_FALSEIF0
push this 0 //pointer to bat for method call
push constant 1 
call Bat.setDirection 2
pop temp 0 //remove return value from stack after do statement
goto IF_TRUEIF0
label IF_FALSEIF0
push local 0 //value of key
push constant 132 
eq
not
if-goto IF_FALSEIF1
push this 0 //pointer to bat for method call
push constant 2 
call Bat.setDirection 2
pop temp 0 //remove return value from stack after do statement
goto IF_TRUEIF1
label IF_FALSEIF1
push local 0 //value of key
push constant 140 
eq
not
if-goto IF_FALSEIF2
push constant 1 
neg //'true'
pop this 3 //bind topmost stack value to exit
goto IF_TRUEIF2
label IF_FALSEIF2
label IF_TRUEIF2
label IF_TRUEIF1
label IF_TRUEIF0
label WHILE4
push local 0 //value of key
push constant 0 
eq
not
push this 3 //value of exit
not
and
not
if-goto WHILE5
call Keyboard.keyPressed 0
pop local 0 //bind topmost stack value to key
push this 0 //pointer to bat for method call
call Bat.move 1
pop temp 0 //remove return value from stack after do statement
push pointer 0 //Push current object to stack for method call
call PongGame.moveBall 1
pop temp 0 //remove return value from stack after do statement
push constant 50 
call Sys.wait 1
pop temp 0 //remove return value from stack after do statement
goto WHILE4
label WHILE5
goto WHILE0
label WHILE1
push this 3 //value of exit
not
if-goto IF_FALSEIF3
push constant 10 
push constant 27 
call Output.moveCursor 2
pop temp 0 //remove return value from stack after do statement
push constant 9 
call String.new 1
push constant 71 
call String.appendChar 2
push constant 97 
call String.appendChar 2
push constant 109 
call String.appendChar 2
push constant 101 
call String.appendChar 2
push constant 32 
call String.appendChar 2
push constant 79 
call String.appendChar 2
push constant 118 
call String.appendChar 2
push constant 101 
call String.appendChar 2
push constant 114 
call String.appendChar 2
call Output.printString 1
pop temp 0 //remove return value from stack after do statement
goto IF_TRUEIF3
label IF_FALSEIF3
label IF_TRUEIF3
push constant 0 
return
function PongGame.moveBall 5
push argument 0 //arg 0 holds the pointer to the object
pop pointer 0 
push this 1 //pointer to ball for method call
call Ball.move 1
pop this 2 //bind topmost stack value to wall
push this 2 //value of wall
push constant 0 
gt
push this 2 //value of wall
push this 5 //value of lastWall
eq
not
and
not
if-goto IF_FALSEIF4
push this 2 //value of wall
pop this 5 //bind topmost stack value to lastWall
push constant 0 
pop local 0 //bind topmost stack value to bouncingDirection
push this 0 //pointer to bat for method call
call Bat.getLeft 1
pop local 1 //bind topmost stack value to batLeft
push this 0 //pointer to bat for method call
call Bat.getRight 1
pop local 2 //bind topmost stack value to batRight
push this 1 //pointer to ball for method call
call Ball.getLeft 1
pop local 3 //bind topmost stack value to ballLeft
push this 1 //pointer to ball for method call
call Ball.getRight 1
pop local 4 //bind topmost stack value to ballRight
push this 2 //value of wall
push constant 4 
eq
not
if-goto IF_FALSEIF5
push local 1 //value of batLeft
push local 4 //value of ballRight
gt
push local 2 //value of batRight
push local 3 //value of ballLeft
lt
or
pop this 3 //bind topmost stack value to exit
push this 3 //value of exit
not
not
if-goto IF_FALSEIF6
push local 4 //value of ballRight
push local 1 //value of batLeft
push constant 10 
add
lt
not
if-goto IF_FALSEIF7
push constant 1 
neg
pop local 0 //bind topmost stack value to bouncingDirection
goto IF_TRUEIF7
label IF_FALSEIF7
push local 3 //value of ballLeft
push local 2 //value of batRight
push constant 10 
sub
gt
not
if-goto IF_FALSEIF8
push constant 1 
pop local 0 //bind topmost stack value to bouncingDirection
goto IF_TRUEIF8
label IF_FALSEIF8
label IF_TRUEIF8
label IF_TRUEIF7
push this 6 //value of batWidth
push constant 2 
sub
pop this 6 //bind topmost stack value to batWidth
push this 0 //pointer to bat for method call
push this 6 //value of batWidth
call Bat.setWidth 2
pop temp 0 //remove return value from stack after do statement
push this 4 //value of score
push constant 1 
add
pop this 4 //bind topmost stack value to score
push constant 22 
push constant 7 
call Output.moveCursor 2
pop temp 0 //remove return value from stack after do statement
push this 4 //value of score
call Output.printInt 1
pop temp 0 //remove return value from stack after do statement
goto IF_TRUEIF6
label IF_FALSEIF6
label IF_TRUEIF6
goto IF_TRUEIF5
label IF_FALSEIF5
label IF_TRUEIF5
push this 1 //pointer to ball for method call
push local 0 //value of bouncingDirection
call Ball.bounce 2
pop temp 0 //remove return value from stack after do statement
goto IF_TRUEIF4
label IF_FALSEIF4
label IF_TRUEIF4
push constant 0 
return
