<class>
	<keyword> class </keyword>
<identifier>
	<name> None Main </name>
	<type> None Not in symbol table </type>
	<kind> None Not in symbol table </kind>
	<index> Not in symbol table </index>
	<category> class definition </category>
	<usage> declared </usage>
</identifier>	<symbol> { </symbol>
<subroutineDec>
	<keyword> function </keyword>
	<keyword> void </keyword>
<identifier>
	<name> None main </name>
	<type> void Not in symbol table </type>
	<kind> None Not in symbol table </kind>
	<index> Not in symbol table </index>
	<category> function </category>
	<usage> declared </usage>
</identifier>	<symbol> ( </symbol>
<parameterList>
</parameterList>
	<symbol> ) </symbol>
<subroutineBody>
	<symbol> { </symbol>
<varDec>
	<keyword> var </keyword>
<identifier>
	<name> None SquareGame </name>
	<type> void Not in symbol table </type>
	<kind> None Not in symbol table </kind>
	<index> Not in symbol table </index>
	<category> function </category>
	<usage> declared </usage>
</identifier><identifier>
	<name> None game </name>
	<type> void Not in symbol table </type>
	<kind> None Not in symbol table </kind>
	<index> Not in symbol table </index>
	<category> function </category>
	<usage> declared </usage>
</identifier>	<symbol> ; </symbol>
</varDec>
<statements>
<letStatement>
	<keyword> let </keyword>
<identifier>
	<name> None game </name>
	<type> void Not in symbol table </type>
	<kind> None Not in symbol table </kind>
	<index> Not in symbol table </index>
	<category> function </category>
	<usage> declared </usage>
</identifier>	<symbol> = </symbol>
<expression>
<term>
<identifier>
	<name> None SquareGame </name>
	<type> void Not in symbol table </type>
	<kind> None Not in symbol table </kind>
	<index> Not in symbol table </index>
	<category> function </category>
	<usage> declared </usage>
</identifier>	<symbol> . </symbol>
<identifier>
	<name> None new </name>
	<type> void Not in symbol table </type>
	<kind> None Not in symbol table </kind>
	<index> Not in symbol table </index>
	<category> function </category>
	<usage> declared </usage>
</identifier>	<symbol> ( </symbol>
<expressionList>
</expressionList>
	<symbol> ) </symbol>
</term>
</expression>
	<symbol> ; </symbol>
</letStatement>
<doStatement>
	<keyword> do </keyword>
<identifier>
	<name> None game </name>
	<type> void Not in symbol table </type>
	<kind> None Not in symbol table </kind>
	<index> Not in symbol table </index>
	<category> function </category>
	<usage> declared </usage>
</identifier>	<symbol> . </symbol>
<identifier>
	<name> None run </name>
	<type> void Not in symbol table </type>
	<kind> None Not in symbol table </kind>
	<index> Not in symbol table </index>
	<category> function </category>
	<usage> declared </usage>
</identifier>	<symbol> ( </symbol>
<expressionList>
</expressionList>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
</doStatement>
<doStatement>
	<keyword> do </keyword>
<identifier>
	<name> None game </name>
	<type> void Not in symbol table </type>
	<kind> None Not in symbol table </kind>
	<index> Not in symbol table </index>
	<category> function </category>
	<usage> declared </usage>
</identifier>	<symbol> . </symbol>
<identifier>
	<name> None dispose </name>
	<type> void Not in symbol table </type>
	<kind> None Not in symbol table </kind>
	<index> Not in symbol table </index>
	<category> function </category>
	<usage> declared </usage>
</identifier>	<symbol> ( </symbol>
<expressionList>
</expressionList>
	<symbol> ) </symbol>
	<symbol> ; </symbol>
</doStatement>
<returnStatement>
	<keyword> return </keyword>
	<symbol> ; </symbol>
</returnStatement>
</statements>
	<symbol> } </symbol>
</subroutineBody>
</subroutineDec>
	<symbol> } </symbol>
</class>
